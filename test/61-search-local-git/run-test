#! /usr/bin/env bash

[ "${TRACE}" = 'YES' ] && set -x


run_mulle_fetch()
{
   log_fluff "####################################"
   log_fluff ${MULLE_FETCH} ${MULLE_FETCH_FLAGS} "$@"
   log_fluff "####################################"

   exekutor ${MULLE_FETCH} ${MULLE_FETCH_FLAGS} "$@"
}


_setup_demo_repo()
{
   git init

   redirect_exekutor version echo "1.0.0"
   exekutor git add version
   exekutor git commit -m "inital version 1.0.0 (tagged)"
   exekutor git tag "1.0.0"
}


setup_demo_repo()
{
   (
      set -e
      mkdir_if_missing "$1" &&
      exekutor cd "$1" && _setup_demo_repo
      set +e
   )
}


expect_directory()
{
   local result="$1"
   local expected="$2"

   if ! exekutor [ "${result}" -ef "${expected}" ]
   then
      exekutor fail "Expected \"${expected}\" but got \"${result}\""
   fi
}


expect_version()
{
   local dstdir="$1"
   local expected="$2"

   local version

   version="`exekutor cat "${dstdir}/version"`"
   if exekutor [ "${version}" != "${expected}" ]
   then
      exekutor fail "Expected to find version \"${expected}\" but got \"${version}\""
   fi
}


main()
{
   MULLE_FETCH_FLAGS="$@"

   _options_mini_main "$@"

   local directory
   local repo
   local dstdir

   directory="`make_tmp_directory`" || exit 1
   directory="${directory:-/tmp/exekutor}"

   repo="${directory}/repo"
   dstdir="${directory}/dstdir"

   setup_demo_repo "${repo}"

   local  name

   if run_mulle_fetch search-local -l ":" "https://fake.url/repo.git"
   then
      fail "search-local unexpectedly succeded"
   fi
   log_verbose "----- #1 PASSED -----"

   result="`run_mulle_fetch search-local -l "${directory}" "https://fake.url/repo.git"`" || exit 1
   expect_directory "${result}" "${repo}"
   log_verbose "----- #2 PASSED -----"

   run_mulle_fetch fetch -l "${directory}" "https://fake.url/repo.git" "${dstdir}" || exit 1

   expect_version "${dstdir}" "1.0.0"
   log_verbose "----- #3 PASSED -----"

   log_info "----- ALL PASSED -----"

   rmdir_safer "${directory}"
}



init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1

   MULLE_FETCH="${MULLE_FETCH:-${PWD}/../../mulle-fetch}"
}


init "$@"
main "$@"
