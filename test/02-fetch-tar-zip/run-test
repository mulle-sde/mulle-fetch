#! /usr/bin/env bash

[ "${TRACE}" = "YES" ] && set -x


run_mulle_fetch()
{
   log_fluff "####################################"
   log_fluff ${MULLE_FETCH} ${MULLE_FETCH_FLAGS} "$@"
   log_fluff "####################################"

   exekutor ${MULLE_FETCH} ${MULLE_FETCH_FLAGS} "$@"
}


_setup_demo_repo()
{
   git init

   redirect_exekutor version echo "1.0.0"
   exekutor git add version
   exekutor git commit -m "inital version 1.0.0 (tagged)"
   exekutor git tag "1.0.0"
}


setup_demo_repo()
{
   (
      set -e
      mkdir_if_missing "$1" &&
      ( exekutor cd "$1" && _setup_demo_repo ) &&
      set +e
   ) || internal_fail "fail"
}


setup_demo_tar()
{
   tar cfz "$1" "$2" || internal_fail "fail"
}


setup_demo_zip()
{
   zip -u -q -r "$1" "$2" || internal_fail "fail"
}


expect_version()
{
   local dstdir="$1"
   local expected="$2"

   local version

   version="`exekutor cat "${dstdir}/version"`"
   if exekutor [ "${version}" != "${expected}" ]
   then
      exekutor fail "Expected to find version \"${expected}\" but got \"${version}\""
   fi
}


main()
{
   MULLE_FETCH_FLAGS="$@"

   _options_mini_main "$@"

   local directory
   local dstdir
   local repo
   local archive

   directory="`make_tmp_directory`" || exit 1
   directory="${directory:-/tmp/exekutor}"

   repo="${directory}/repo"
   dstdir="${directory}/here"

   setup_demo_repo "${repo}" || exit 1

   archive="${directory}/repo-x.y.z.tgz"
   setup_demo_tar "${archive}" "${repo}"  || exit 1

   run_mulle_fetch fetch -s tar "${archive}" "${dstdir}" || exit 1
   expect_version "${dstdir}" "1.0.0"
   rmdir_safer "${dstdir}"
   log_verbose "----- #1 PASSED -----"

   archive="${directory}/repo-x.y.z.zip"
   setup_demo_zip "${archive}" "${repo}"  || exit 1

   run_mulle_fetch fetch -s zip "${archive}" "${dstdir}" || exit 1
   expect_version "${dstdir}" "1.0.0"
   rmdir_safer "${dstdir}"
   log_verbose "----- #2 PASSED -----"

   log_info "----- ALL PASSED -----"

   rmdir_safer "${directory}"
}



init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1

   MULLE_FETCH="${MULLE_FETCH:-${PWD}/../../mulle-fetch}"
}



init "$@"
main "$@"

