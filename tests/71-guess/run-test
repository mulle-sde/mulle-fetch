#! /usr/bin/env bash

[ "${TRACE}" = "YES" ] && set -x


run_mulle_fetch()
{
   log_fluff "####################################"
   log_fluff ${MULLE_FETCH} ${MULLE_FETCH_FLAGS} "$@"
   log_fluff "####################################"

   exekutor ${MULLE_FETCH} ${MULLE_FETCH_FLAGS} "$@"
}


expect_output()
{
   local output="$1"
   local expected="$2"

   if exekutor [ "${output}" != "${expected}" ]
   then
      exekutor fail "Expected \"${expected}\" but got \"${output}\""
   fi
}


run_test1()
{
   if run_mulle_fetch guess 2> /dev/null
   then
      fail "empty guess unexpectedly succeded"
   fi
   log_verbose "----- #1 PASSED -----"

   result="`run_mulle_fetch guess /name`"
   expect_output "${result}" "name"
   log_verbose "----- #1 PASSED -----"

   result="`run_mulle_fetch guess https://www.mulle-kybernetik.com/foo.git`"
   expect_output "${result}" "foo"
   log_verbose "----- #2 PASSED -----"

   result="`run_mulle_fetch guess https://www.mulle-kybernetik.com/foo`"
   expect_output "${result}" "foo"
   log_verbose "----- #3 PASSED -----"

   result="`run_mulle_fetch guess githost:foo`"
   expect_output "${result}" "foo"
   log_verbose "----- #4 PASSED -----"

   result="`run_mulle_fetch guess -s tar https://www.mulle-kybernetik.com/foo.tar`"
   expect_output "${result}" "foo"
   log_verbose "----- #5 PASSED -----"

   result="`run_mulle_fetch guess -s tar https://www.mulle-kybernetik.com/foo.tar.gz`"
   expect_output "${result}" "foo"
   log_verbose "----- #6 PASSED -----"

   result="`run_mulle_fetch guess -s tar https://github.com/mulle-nat/mulle-c11/archive/1.3.5.tar.gz`"
   expect_output "${result}" "mulle-c11"
   log_verbose "----- #7 PASSED -----"

   result="`run_mulle_fetch guess -s zip https://github.com/mulle-nat/mulle-c11/archive/1.3.5.zip`"
   expect_output "${result}" "mulle-c11"
   log_verbose "----- #8 PASSED -----"

   result="`run_mulle_fetch guess -s symlink /github.com/mulle-nat/mulle-c11/archive/1.3.5.zip`"
   expect_output "${result}" "1.3.5.zip"
   log_verbose "----- #9 PASSED -----"

}


run_test2()
{
   if run_mulle_fetch typeguess 2> /dev/null
   then
      fail "empty typeguess unexpectedly succeded"
   fi
   log_verbose "----- #10 PASSED -----"

   result="`run_mulle_fetch typeguess /name`"
   expect_output "${result}" ""
   log_verbose "----- #11 PASSED -----"

   result="`run_mulle_fetch typeguess https://www.mulle-kybernetik.com/foo.git`"
   expect_output "${result}" "git"
   log_verbose "----- #12 PASSED -----"

   result="`run_mulle_fetch typeguess https://www.mulle-kybernetik.com/foo`"
   expect_output "${result}" ""
   log_verbose "----- #13 PASSED -----"

   result="`run_mulle_fetch typeguess githost:foo`"
   expect_output "${result}" ""
   log_verbose "----- #14 PASSED -----"

   result="`run_mulle_fetch typeguess https://www.mulle-kybernetik.com/foo.tar`"
   expect_output "${result}" "tar"
   log_verbose "----- #15 PASSED -----"

   result="`run_mulle_fetch typeguess https://github.com/mulle-nat/mulle-c11/archive/1.3.5.tar.g?whatever`"
   expect_output "${result}" "tar"
   log_verbose "----- #17 PASSED -----"

   result="`run_mulle_fetch typeguess https://github.com/mulle-nat/mulle-c11/archive/1.3.5.zip`"
   expect_output "${result}" "zip"
   log_verbose "----- #8 PASSED -----"

}


main()
{
   MULLE_FETCH_FLAGS="$@"

   _options_mini_main "$@"

   run_test1
   run_test2

   log_info "----- ALL PASSED -----"
}


init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env library-path`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1

   MULLE_FETCH="${MULLE_FETCH:-${PWD}/../../mulle-fetch}"
}


init "$@"
main "$@"
